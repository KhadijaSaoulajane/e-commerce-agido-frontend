{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Set up a base HTTP instance if needed\nconst http = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst ApiService = {\n  getCustomerAccount(user_id) {\n    return http.get(`/account/${user_id}`);\n  },\n  getUser(user) {\n    return http.post('/user', user);\n  },\n  getAllCustomerAccounts() {\n    return http.get(`/accounts`);\n  },\n  register(user) {\n    return http.post('/user/register', user);\n  },\n  approveTransaction(transaction_id) {\n    return http.get(`/transaction/approve/${transaction_id}`);\n  },\n  createTransaction(transaction) {\n    return http.post('/transaction', transaction);\n  }\n  /* fetchCustomerTransactions(customerId) {\n    return http.get(`/customers/${customerId}/transactions`);\n  },\n  deposit(amount, customerId) {\n    return http.post(`/customers/${customerId}/deposit`, { amount });\n  },\n  withdraw(amount, customerId) {\n    return http.post(`/customers/${customerId}/withdraw`, { amount });\n  },\n   */\n};\nexport default ApiService;","map":{"version":3,"names":["axios","API_BASE_URL","http","create","baseURL","headers","ApiService","getCustomerAccount","user_id","get","getUser","user","post","getAllCustomerAccounts","register","approveTransaction","transaction_id","createTransaction","transaction"],"sources":["/Users/gigi/Desktop/Imero/react-cbwvkr/src/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Set up a base HTTP instance if needed\nconst http = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst ApiService = {\n  getCustomerAccount(user_id) {\n    return http.get(`/account/${user_id}`);\n  },\n  getUser(user) {\n    return http.post('/user',  user );\n  },\n  getAllCustomerAccounts() {\n    return http.get(`/accounts`);\n  },\n  register(user){\n    return http.post('/user/register',  user );\n  },\n  approveTransaction(transaction_id) {\n    return http.get(`/transaction/approve/${transaction_id}`);\n  },\n  createTransaction(transaction) {\n    return http.post('/transaction',transaction);\n  }\n    /* fetchCustomerTransactions(customerId) {\n      return http.get(`/customers/${customerId}/transactions`);\n    },\n    deposit(amount, customerId) {\n      return http.post(`/customers/${customerId}/deposit`, { amount });\n    },\n    withdraw(amount, customerId) {\n      return http.post(`/customers/${customerId}/withdraw`, { amount });\n    },\n\n    */\n\n\n};\n\nexport default ApiService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACxBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG;EACjBC,kBAAkBA,CAACC,OAAO,EAAE;IAC1B,OAAON,IAAI,CAACO,GAAG,CAAE,YAAWD,OAAQ,EAAC,CAAC;EACxC,CAAC;EACDE,OAAOA,CAACC,IAAI,EAAE;IACZ,OAAOT,IAAI,CAACU,IAAI,CAAC,OAAO,EAAGD,IAAK,CAAC;EACnC,CAAC;EACDE,sBAAsBA,CAAA,EAAG;IACvB,OAAOX,IAAI,CAACO,GAAG,CAAE,WAAU,CAAC;EAC9B,CAAC;EACDK,QAAQA,CAACH,IAAI,EAAC;IACZ,OAAOT,IAAI,CAACU,IAAI,CAAC,gBAAgB,EAAGD,IAAK,CAAC;EAC5C,CAAC;EACDI,kBAAkBA,CAACC,cAAc,EAAE;IACjC,OAAOd,IAAI,CAACO,GAAG,CAAE,wBAAuBO,cAAe,EAAC,CAAC;EAC3D,CAAC;EACDC,iBAAiBA,CAACC,WAAW,EAAE;IAC7B,OAAOhB,IAAI,CAACU,IAAI,CAAC,cAAc,EAACM,WAAW,CAAC;EAC9C;EACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CAAC;AAED,eAAeZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}