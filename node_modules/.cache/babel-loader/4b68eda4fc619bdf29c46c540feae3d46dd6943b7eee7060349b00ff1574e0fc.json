{"ast":null,"code":"var _jsxFileName = \"/Users/gigi/Desktop/Imero/react-cbwvkr/src/BackOffice/BackOffice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, Fragment } from 'react';\nimport ApiService from '../services/ApiService';\nimport TransactionsTable from '../components/TransactionsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BackOffice() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10));\n  const [sums, setSums] = useState({\n    deposits: 0,\n    withdrawals: 0\n  });\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(5);\n  const calculateAndSetSums = (customers, startDate, endDate) => {\n    let deposits = 0;\n    let withdrawals = 0;\n    customers.forEach(customer => {\n      customer.transactions.forEach(transaction => {\n        const transactionDate = new Date(transaction.created_at);\n        const start = startDate ? new Date(startDate) : new Date('1900-01-01');\n        const end = endDate ? new Date(endDate) : new Date();\n        console.log(\"transactionDate >= start && transactionDate <= end: \", transactionDate >= start && transactionDate <= end);\n        if (!start && !endDate || transactionDate >= start && transactionDate <= end) {\n          if (transaction.type === 'D') {\n            deposits += transaction.amount;\n          } else if (transaction.type === 'W') {\n            withdrawals += transaction.amount;\n          }\n        }\n      });\n    });\n    console.log('deposits: ', deposits);\n    // Assuming setSums is a setState call in a React component\n    setSums({\n      deposits,\n      withdrawals\n    });\n  };\n  useEffect(() => {\n    calculateAndSetSums(customers, startDate, endDate);\n  }, [customers, startDate, endDate]);\n  useEffect(() => {\n    getAllCustomerAccounts();\n  }, []);\n  const getAllCustomerAccounts = () => {\n    ApiService.getAllCustomerAccounts().then(response => {\n      setCustomers(response.data);\n    }).catch(error => console.log(error));\n  };\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(customers.length / customersPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Get current customers\n  const indexOfLastCustomer = currentPage * customersPerPage;\n  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;\n  const currentCustomers = customers.slice(indexOfFirstCustomer, indexOfLastCustomer);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.account_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)]\n        }, customer.account_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: number === currentPage,\n        onClick: () => paginate(number),\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Deposit overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"start-date\",\n        children: \"Start Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"start-date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"end-date\",\n        children: \"End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"end-date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Deposits: \", sums.deposits]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Withdrawals: \", sums.withdrawals]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: 'block',\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsModalVisible(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(TransactionsTable, {\n              transactions: selectedCustomer.transactions,\n              onTransactionApproved: getAllCustomerAccounts,\n              isAgent: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pending transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: customers.map(customer => customer.transactions).flat().filter(transaction => transaction.type === 'W' && transaction.approved === false),\n      onTransactionApproved: getAllCustomerAccounts,\n      isAgent: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(BackOffice, \"QI/7spcezzNP3bKdxD2xBuLO5GA=\");\n_c = BackOffice;\nexport default BackOffice;\nvar _c;\n$RefreshReg$(_c, \"BackOffice\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","ApiService","TransactionsTable","jsxDEV","_jsxDEV","BackOffice","_s","customers","setCustomers","startDate","setStartDate","endDate","setEndDate","Date","toISOString","slice","sums","setSums","deposits","withdrawals","selectedCustomer","setSelectedCustomer","isModalVisible","setIsModalVisible","currentPage","setCurrentPage","customersPerPage","calculateAndSetSums","forEach","customer","transactions","transaction","transactionDate","created_at","start","end","console","log","type","amount","getAllCustomerAccounts","then","response","data","catch","error","pageNumbers","i","Math","ceil","length","push","paginate","pageNumber","indexOfLastCustomer","indexOfFirstCustomer","currentCustomers","children","Table","striped","bordered","hover","fileName","_jsxFileName","lineNumber","columnNumber","map","account_id","balance","Pagination","number","Item","active","onClick","htmlFor","id","value","onChange","e","target","className","style","display","backgroundColor","onTransactionApproved","isAgent","flat","filter","approved","_c","$RefreshReg$"],"sources":["/Users/gigi/Desktop/Imero/react-cbwvkr/src/BackOffice/BackOffice.js"],"sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\nimport ApiService from '../services/ApiService';\nimport TransactionsTable from '../components/TransactionsTable';\nfunction BackOffice() {\n  const [customers, setCustomers] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10));\n  const [sums, setSums] = useState({ deposits: 0, withdrawals: 0 });\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(5);\n  const calculateAndSetSums = (customers, startDate, endDate) => {\n    let deposits = 0;\n    let withdrawals = 0;\n\n    customers.forEach((customer) => {\n      customer.transactions.forEach((transaction) => {\n        const transactionDate = new Date(transaction.created_at);\n\n        const start = startDate ? new Date(startDate) : new Date('1900-01-01');\n        const end = endDate ? new Date(endDate) : new Date();\n      console.log(\"transactionDate >= start && transactionDate <= end: \",transactionDate >= start && transactionDate <= end)\n        if (\n            (!start && !endDate) ||\n            (transactionDate >= start && transactionDate <= end)\n        ) {\n          if (transaction.type === 'D') {\n            deposits += transaction.amount;\n          } else if (transaction.type === 'W') {\n            withdrawals += transaction.amount;\n          }\n        }\n      });\n    });\n\n    console.log('deposits: ', deposits);\n    // Assuming setSums is a setState call in a React component\n    setSums({ deposits, withdrawals });\n  };\n\n  useEffect(() => {\n    calculateAndSetSums(customers, startDate, endDate);\n  }, [customers, startDate, endDate]);\n\n  useEffect(() => {\n      getAllCustomerAccounts();\n  }, []);\n\n    const getAllCustomerAccounts = () => {\n        ApiService.getAllCustomerAccounts()\n            .then((response) => {\n                setCustomers(response.data);\n            })\n            .catch((error) => console.log(error));\n    };\n\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(customers.length / customersPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // Get current customers\n  const indexOfLastCustomer = currentPage * customersPerPage;\n  const indexOfFirstCustomer = indexOfLastCustomer - customersPerPage;\n  const currentCustomers = customers.slice(indexOfFirstCustomer, indexOfLastCustomer);\n\n\n\n  return (\n    <Fragment>\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th>Account ID</th>\n                <th>Balance</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {currentCustomers.map(customer => (\n                <tr key={customer.account_id}>\n                    <td>{customer.account_id}</td>\n                    <td>{customer.balance}</td>\n                    <td> {/* Add your action buttons here */} </td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n        <Pagination>\n            {pageNumbers.map(number => (\n                <Pagination.Item key={number} active={number === currentPage} onClick={() => paginate(number)}>\n                    {number}\n                </Pagination.Item>\n            ))}\n        </Pagination>\n      <h1>Deposit overview</h1>\n      <div>\n        <label htmlFor=\"start-date\">Start Date: </label>\n        <input\n          type=\"date\"\n          id=\"start-date\"\n          value={startDate}\n          onChange={(e) => setStartDate(e.target.value)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"end-date\">End Date: </label>\n        <input\n          type=\"date\"\n          id=\"end-date\"\n          value={endDate}\n          onChange={(e) => setEndDate(e.target.value)}\n        />\n      </div>\n      <p>Deposits: {sums.deposits}</p>\n      <p>Withdrawals: {sums.withdrawals}</p>\n      {isModalVisible && (\n        <div\n          className=\"modal\"\n          style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}\n        >\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <button type=\"button\" onClick={() => setIsModalVisible(false)}>\n                  Close\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <TransactionsTable\n                  transactions={selectedCustomer.transactions}\n                  onTransactionApproved={getAllCustomerAccounts}\n                  isAgent={true}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <h1>Pending transactions</h1>\n      <TransactionsTable\n          transactions={customers.map(customer => customer.transactions).flat()\n              .filter(transaction => transaction.type === 'W' && transaction.approved === false)\n          }\n          onTransactionApproved={getAllCustomerAccounts}\n          isAgent={true}\n\n      />\n\n    </Fragment>\n  );\n}\n\nexport default BackOffice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}