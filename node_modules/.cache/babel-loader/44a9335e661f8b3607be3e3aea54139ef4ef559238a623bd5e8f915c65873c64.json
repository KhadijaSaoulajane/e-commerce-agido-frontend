{"ast":null,"code":"var _jsxFileName = \"/Users/gigi/Desktop/Imero/react-cbwvkr/src/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from '../services/ApiService';\nimport TransactionsTable from \"../components/TransactionsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [customerAccount, setCustomerAccount] = useState({});\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [transaction, setTransaction] = useState({\n    amount: null,\n    type: '',\n    account_id: customerAccount.account_id\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    ApiService.getCustomerAccount(user.user_id).then(response => {\n      setCustomerAccount(response.data);\n    }).catch(error => console.log(error));\n  }, []);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setTransaction(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const createTransaction = transaction => {\n    setError(null);\n    ApiService.createTransaction(transaction).then(response => {\n      console.log(\"response.data: \", response.data);\n      setCustomerAccount({\n        ...customerAccount,\n        transactions: response.data.transactions\n      });\n      setTransaction({\n        amount: null,\n        type: '',\n        account_id: customerAccount.account_id\n      });\n    }).catch(() => {\n      setError(\"Something went wrong, please try again!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account balance : \", customerAccount.balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsModalVisible(true);\n      },\n      children: \"+ Make a new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: customerAccount.transactions,\n      isAgent: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: 'block',\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsModalVisible(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Transaction amount\",\n              name: \"amount\",\n              value: transaction.amount,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              color: 'orange',\n              type: \"button\",\n              onClick: () => {\n                createTransaction({\n                  ...transaction,\n                  type: 'W'\n                });\n              },\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              color: 'green',\n              type: \"button\",\n              onClick: () => {\n                createTransaction({\n                  ...transaction,\n                  type: 'D'\n                });\n              },\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 p-2\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"n4e07Lj1oh/0CoJIRxFT8xDjJ9Q=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","TransactionsTable","jsxDEV","_jsxDEV","Dashboard","user","_s","customerAccount","setCustomerAccount","isModalVisible","setIsModalVisible","transaction","setTransaction","amount","type","account_id","error","setError","getCustomerAccount","user_id","then","response","data","catch","console","log","handleChange","event","name","value","target","prevState","createTransaction","transactions","children","fileName","_jsxFileName","lineNumber","columnNumber","balance","onClick","isAgent","className","style","display","backgroundColor","placeholder","onChange","color","_c","$RefreshReg$"],"sources":["/Users/gigi/Desktop/Imero/react-cbwvkr/src/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApiService from '../services/ApiService';\nimport TransactionsTable from \"../components/TransactionsTable\";\n\nfunction Dashboard({user}) {\n  const [customerAccount, setCustomerAccount] = useState({});\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [transaction, setTransaction] = useState({ amount: null, type: '',account_id:customerAccount.account_id });\n    const [error, setError] = useState(null);\n\n  useEffect(() => {\n    ApiService.getCustomerAccount(user.user_id)\n      .then((response) => {\n        setCustomerAccount(response.data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setTransaction((prevState) => ({ ...prevState, [name]: value }));\n    };\n    const createTransaction = (transaction)=>{\n        setError(null);\n        ApiService.createTransaction(transaction).then((response) => {\n            console.log(\"response.data: \",response.data)\n            setCustomerAccount({ ...customerAccount, transactions: response.data.transactions })\n            setTransaction({ amount: null, type: '',account_id:customerAccount.account_id })\n\n        })\n            .catch(() => {\n                setError(\"Something went wrong, please try again!\");\n            });\n    }\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <p>Account balance : {customerAccount.balance}</p>\n        <h1>Transactions</h1>\n        <button  onClick={() => {\n            setIsModalVisible(true);\n        }}>+ Make a new transaction</button>\n        <TransactionsTable\n            transactions={customerAccount.transactions}\n            isAgent={false}\n        />\n        {isModalVisible && (\n            <div\n                className=\"modal\"\n                style={{ display: 'block', backgroundColor: 'rgba(0,0,0,0.5)' }}\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <button type=\"button\" onClick={() => setIsModalVisible(false)}>\n                                Close\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <input type=\"number\" placeholder=\"Transaction amount\"  name=\"amount\"\n                                   value={transaction.amount}\n                                   onChange={handleChange}/>\n                            <button color={'orange'} type=\"button\" onClick={() => {createTransaction({ ...transaction, type: 'W' });\n                                }}>\n                                Withdraw\n                            </button>\n                            <button color={'green'} type=\"button\" onClick={() => {createTransaction({ ...transaction, type: 'D' });\n                               }}>\n                                Deposit\n                            </button>\n                            {\n                                error && <span className=\"text-red-500 p-2\">{error}</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}